@model AdminB.Feature.CivilDiscourse.Models.CivilCommentsSectionViewModel

@{
    if (Model != null)
    {
       
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <link rel="stylesheet" type="text/css" href="../css/styles.css" />
        <script type="text/javascript" src="../scripts/commentbox.js"></script>

        if (Model.ClearTextbox)
        {
            <script>
                $("document").ready(function () {
                    $(".input-comment").val("");                   
                });
            </script>
        }

        if (!String.IsNullOrEmpty(Model.ReviewText) && !Model.PromptAreYouSure)
        {
            <script>
                $("document").ready(function () {
                    $("html, body").animate({ scrollTop: $(document).height() }, "slow");
                    $(".cooldown-counter").show();

                    $("a.submit-button").addClass("disabled");

                    var seconds = @(Model.Cooldown/1000);
                    $("#cooldown-count").html(seconds);

                    var timeleft = seconds;
                    var downloadTimer = setInterval(function () {
                        timeleft--;
                        document.getElementById("cooldown-count").textContent = timeleft;
                        if (timeleft <= 0) {
                            clearInterval(downloadTimer);
                            $(".cooldown-counter").hide();
                            $("a.submit-button").removeClass("disabled");
                        }
                    }, 1000);
                });
            </script>
        }

        <div>@Html.Raw(Model.IntroText)</div>

        <div class="comments-component">
            <div class="comments">
                @foreach (var comment in Model.Comments)
                {
                    <div class="comment">
                        <div class="header">
                            <div class="username">
                                @comment.Fields["Username"].Value.Replace("sitecore\\", ""):
                            </div>
                            <div class="date">
                                @comment.Created.ToString("g");
                            </div>
                        </div>
                        <div class="body">
                            @comment.Fields["Comment"].Value
                        </div>
                    </div>
                }
            </div>
        </div>

        if (Model.DisplayWarnings)
        {
            <div class="review-box">
                <h4 class="review-heading">We detected some language in your comment that is not conducive to a productive discussion. Please review your comment and consider changes the words and phrases we've highlighted. Hover over highlighted words for helpful tips and suggestions</h4>
                @Html.Raw(Model.ReviewText)
            </div>
        }

        using (Html.BeginRouteForm(Sitecore.Mvc.Configuration.MvcSettings.SitecoreRouteName, FormMethod.Post))
        {
            <div class="comment-box">
                @Html.Sitecore().FormHandler("CivilComments", "SubmitComment")
                @Html.TextAreaFor(m => m.Comment, new {@class = "input-comment", @cols = 180, @rows = 10})
                <div class="cooldown-counter">Take some time to review your comment. You can submit again in <span id="cooldown-count"></span></div>
                <a href="javascript:void(0);" class="submit-button">Submit</a>
                @Html.TextBoxFor(m => m.PreviousComment, new {@class = "hidden previous-comment"})
                @Html.TextBoxFor(m => m.TotalWarnings, new {@class = "hidden total-warnings"})
                @Html.TextBoxFor(m => m.SubmitShittyComment, new {@class = "hidden submit-shitty-comment"})
                
                <input type="submit" class="submit-btn-hidden hidden"/>
            </div>
            
        }

        <div class="prev-comment-val hidden">@Model.PreviousComment</div>
        <div class="total-warnings-val hidden">@Model.TotalWarnings</div>

        <span class="error-message">You haven't typed anything!</span>

        if (Model.PromptAreYouSure)
        {
            <div class="overlay">
                <div class="are-you-sure">
                    <a class="close-overlay close">X</a>
                    <span>It looks like you haven't made any changes. Are you sure you want to submit this comment?</span>
                    <a class="submit-override" href="javascript:void(0)">Yes, I'm Really Sure</a>
                    <a class="close-overlay-btn close" href="javascript:void(0)">No, I'll revise it</a>
                </div>
            </div>
        }
    }
}

